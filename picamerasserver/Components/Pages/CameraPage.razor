@page "/camera"
@inject IDialogService Dialog
@using picamerasserver.Components.Components

<PageTitle>Cameras - PiCam</PageTitle>
<DefaultPage>
    <MudStack Style="width: 100%">
        <MudExpansionPanels Elevation="5" MultiExpansion>
            <MudExpansionPanel Expanded Gutters="false" Dense="true">
                <TitleContent>
                    <MudText Typo="Typo.h5">Take picture</MudText>
                </TitleContent>
                <ChildContent>
                    <StatusTable
                        ColorTransform="@ColorTransform"
                        TooltipTransform="@_tooltipTransform">
                    </StatusTable>
                    <MudStack Row="true" Spacing="4" Class="pa-4">
                        <MudButton Variant="Variant.Filled" Color="Color.Primary"
                                   OnClick="@TakePicture">
                            Take pic
                        </MudButton>
                        <MudButton Variant="Variant.Filled" Color="Color.Primary"
                                   OnClick="@SendPicture">
                            Send pic
                        </MudButton>
                    </MudStack>
                </ChildContent>
            </MudExpansionPanel>
            <MudExpansionPanel Expanded Gutters="false" Dense="true">
                <TitleContent>
                    <MudText Typo="Typo.h5">Picture list</MudText>
                </TitleContent>
                <ChildContent>
                    <MudDataGrid @ref="_gridData" T="PictureElement" ServerData="ServerReload" Filterable="false"
                                 SortMode="SortMode.None">
                        @* <ToolBarContent> *@
                        @*     <MudText Typo="Typo.h6">Pictures</MudText> *@
                        @* </ToolBarContent> *@
                        <Columns>
                            <TemplateColumn HeaderClass="align-center px-0"
                                            HeaderStyle="text-align: center; max-width:75px" CellClass="pa-0 ma-0"
                                            CellStyle="text-align: center; max-width: 75px">
                                <HeaderTemplate>
                                    <div>
                                        Selected
                                    </div>
                                </HeaderTemplate>
                                <CellTemplate>
                                    <MudToggleIconButton Toggled="@(_selectedPicture?.Uuid == context.Item.Uuid)"
                                                         ToggledChanged="@(() => SelectPicture(context.Item.Uuid))"
                                                         Icon="@Icons.Material.Filled.RadioButtonUnchecked"
                                                         Color="@Color.Default"
                                                         ToggledIcon="@Icons.Material.Filled.RadioButtonChecked"
                                                         ToggledColor="@Color.Success"
                                                         Class="pa-3 ma-0"/>
                                </CellTemplate>
                            </TemplateColumn>
                            <PropertyColumn Property="x => x.Uuid" Title="Uuid"/>
                            <PropertyColumn Property="x => x.RequestTime" Title="Request time"/>
                            <TemplateColumn Title="Taken">
                                <CellTemplate>
                                    <MudStack Row>
                                        @context.Item.TakenCount / @context.Item.TotalCount
                                    </MudStack>
                                </CellTemplate>
                            </TemplateColumn>
                            <TemplateColumn Title="Sent">
                                <CellTemplate>
                                    <MudStack Row>
                                        @context.Item.SentCount / @context.Item.TakenCount
                                    </MudStack>
                                </CellTemplate>
                            </TemplateColumn>
                            <TemplateColumn Title="Actions" HeaderStyle="text-align: center" CellClass="pa-0 ma-0"
                                            CellStyle="text-align: center">
                                <CellTemplate>
                                    <MudStack Row>
                                        <MudIconButton Href="@($"downloadpictures/{context.Item.Uuid}")" Target="_blank"
                                                       Icon="@Icons.Material.Rounded.Download" aria-label="download"
                                                       Size="Size.Medium" Class="pa-3 ma-0"/>
                                    </MudStack>
                                </CellTemplate>
                            </TemplateColumn>
                        </Columns>
                        <PagerContent>
                            <MudDataGridPager T="PictureElement"/>
                        </PagerContent>
                    </MudDataGrid>
                </ChildContent>
            </MudExpansionPanel>
            <MudExpansionPanel>
                <TitleContent>
                    <MudText Typo="Typo.h5">Config</MudText>
                </TitleContent>
                <ChildContent>
                    <ControlsControl/>

                    <MudButton Variant="Variant.Filled" Color="Color.Primary"
                               OnClick="@(() => OnSubmitConfig())">
                        Set controls
                    </MudButton>
                    <MudButton Variant="Variant.Filled" Color="Color.Primary"
                               OnClick="@(() => OnGetConfig())">
                        Set controls
                    </MudButton>
                </ChildContent>
            </MudExpansionPanel>
            <MudExpansionPanel>
                <TitleContent>
                    <MudText Typo="Typo.h5">Preview</MudText>
                </TitleContent>
                <ChildContent>
                    <MudStack Row="true" Spacing="4" Class="pa-4">
                        <MudButton Variant="Variant.Filled" Color="Color.Primary"
                                   OnClick="@StartPreview">
                            Start preview
                        </MudButton>
                        <MudButton Variant="Variant.Filled" Color="Color.Primary"
                                   OnClick="@StopPreview">
                            Stop preview
                        </MudButton>
                    </MudStack>
                    <MudImage Src="@PreviewStreamUrl" Alt="X" Elevation="25"
                              Class="rounded-lg ma-4"
                              ObjectFit="ObjectFit.Contain" Fluid="true"/>
                    <MudButton Variant="Variant.Filled" Color="Color.Primary"
                               OnClick="@OpenPreviewDialog">
                        Open dialog
                    </MudButton>
                </ChildContent>
            </MudExpansionPanel>
        </MudExpansionPanels>
    </MudStack>
</DefaultPage>

@code {
    private Func<string, RenderFragment?> _tooltipTransform = _ => null;

    private void UpdateTooltipTransform()
    {
        _tooltipTransform = cameraId =>
        {
            var item = _selectedPicture?.CameraPictures.FirstOrDefault(x => x.CameraId == cameraId);
            if (item == null)
                return null;

            return @<PictureRequestTooltip CameraPicture="item"/>;
        };
    }

    private Task OpenPreviewDialog()
    {
        var dialogParams = new DialogParameters<PreviewDialog>
        {
            { x => x.CameraId, "A1" }
        };
        var options = new DialogOptions { FullScreen = true, NoHeader = true, CloseOnEscapeKey = true, MaxWidth = MaxWidth.ExtraExtraLarge };

        return Dialog.ShowAsync<PreviewDialog>("Preview", dialogParams, options);
    }
}