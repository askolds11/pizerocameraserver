@using picamerasserver.Components.Components.StatusTable.Tooltip
<MudTable Items="@_rows" Bordered Dense Elevation="@Elevation">
    <HeaderContent>
        <MudTh Class="pa-0">
            <div class="d-flex justify-center">
                <MudText Typo="Typo.h6">#</MudText>
            </div>
        </MudTh>
        @foreach (var columnLabel in _columns)
        {
            <MudTh Class="pa-0">
                <div class="d-flex justify-center">
                    <MudText Typo="Typo.h6">@columnLabel</MudText>
                </div>
            </MudTh>
        }
    </HeaderContent>
    <RowTemplate>
        <MudTd Class="pa-0" Width="100">
            <div class="d-flex justify-center">
                <MudText Typo="Typo.h6">@context</MudText>
            </div>
        </MudTd>
        @foreach (var columnLabel in _columns)
        {
            @* <MudTd>@GetDeviceData(columnLabel, context.RowNumber)</MudTd> *@
            @* <MudTd Class="mx-auto px-0 py-0 ">@columnLabel@context</MudTd> *@

            <MudTd Class="px-0 py-2" Width="100" Style="@($"background:{GetCellColor(columnLabel, context)}")">
                <StatusTooltip>
                    <ChildContent>
                        <MudText Typo="Typo.body1">@columnLabel@context</MudText>
                    </ChildContent>
                    <TooltipContent>
                        @TooltipTransform(columnLabel + context)
                    </TooltipContent>
                </StatusTooltip>
            </MudTd>
        }
    </RowTemplate>
</MudTable>

@code {

    private RenderFragment? GetTooltipContent(string columnLabel, int context)
    {
        var tooltip = TooltipTransform.Invoke(columnLabel + context);
        return tooltip;
    }

}
