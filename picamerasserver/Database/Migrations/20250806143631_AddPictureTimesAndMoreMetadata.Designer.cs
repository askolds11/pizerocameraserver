// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using picamerasserver.Database;

#nullable disable

namespace picamerasserver.Database.Migrations
{
    [DbContext(typeof(PiDbContext))]
    [Migration("20250806143631_AddPictureTimesAndMoreMetadata")]
    partial class AddPictureTimesAndMoreMetadata
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("picamerasserver.Database.Models.CameraModel", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(2)
                        .HasColumnType("character(2)")
                        .IsFixedLength();

                    b.HasKey("Id");

                    b.ToTable("Cameras");
                });

            modelBuilder.Entity("picamerasserver.Database.Models.CameraPictureModel", b =>
                {
                    b.Property<string>("CameraId")
                        .HasMaxLength(2)
                        .HasColumnType("character(2)")
                        .IsFixedLength();

                    b.Property<Guid>("PictureRequestId")
                        .HasColumnType("uuid");

                    b.Property<byte?>("AeState")
                        .HasColumnType("smallint");

                    b.Property<float?>("AnalogueGain")
                        .HasColumnType("real");

                    b.Property<string>("CameraPictureStatus")
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("ColourTemperature")
                        .HasColumnType("integer");

                    b.Property<float?>("DigitalGain")
                        .HasColumnType("real");

                    b.Property<int?>("ExposureTime")
                        .HasColumnType("integer");

                    b.Property<int?>("FocusFoM")
                        .HasColumnType("integer");

                    b.Property<long?>("FrameDuration")
                        .HasColumnType("bigint");

                    b.Property<float?>("Lux")
                        .HasColumnType("real");

                    b.Property<long?>("MonotonicTime")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("PictureRequestReceived")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset?>("PictureTaken")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset?>("ReceivedSaved")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset?>("ReceivedSent")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset?>("ReceivedTaken")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset?>("Requested")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long?>("SensorTimestamp")
                        .HasColumnType("bigint");

                    b.Property<string>("StatusMessage")
                        .HasColumnType("text");

                    b.Property<long>("WaitTimeNanos")
                        .HasColumnType("bigint");

                    b.HasKey("CameraId", "PictureRequestId");

                    b.HasIndex("PictureRequestId");

                    b.ToTable("CameraPictures");
                });

            modelBuilder.Entity("picamerasserver.Database.Models.PictureRequestModel", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("PictureTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("RequestTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Uuid");

                    b.ToTable("PictureRequests");
                });

            modelBuilder.Entity("picamerasserver.Database.Models.CameraPictureModel", b =>
                {
                    b.HasOne("picamerasserver.Database.Models.CameraModel", "Camera")
                        .WithMany()
                        .HasForeignKey("CameraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("picamerasserver.Database.Models.PictureRequestModel", "PictureRequest")
                        .WithMany("CameraPictures")
                        .HasForeignKey("PictureRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Camera");

                    b.Navigation("PictureRequest");
                });

            modelBuilder.Entity("picamerasserver.Database.Models.PictureRequestModel", b =>
                {
                    b.Navigation("CameraPictures");
                });
#pragma warning restore 612, 618
        }
    }
}
